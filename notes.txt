Database:
Database is an organised collection of data. can be easily accessed, stored and modified.

RDBMS: Relational Database Management System. (SQL DB)
>> Stores data in Table format (Rows and Columns)
>> Uses SQL (Structured Query Language) to query and manage data.
Ex: MySQL, PostgreSQL...


Non-RDBMS
>> Stores data in other forms (like JSON, Document..)
Ex: MongoDB, MariaDB....

MySQL:
--------
>> Open-source RDBMS.

SQL:
-----
Basic Syntax:
>> case-insetive. it treats uppercase and lowercase as same. (a=A)
>> every query should end with ";".

DB --> multiple tables --> multiple data.

trainees_record --> attendance(sno,name,age) --> (1,livin,30),(2,kumar,22)......
                --> table2
                    table3
                    .
                    .

Datatype
--------
Numeric:
1)INT --> whole numbers. -23,23,303,1,2,3,0...
2)FLOAT --> decimal numbers. 
3)BIGINT --> very large integer.
4)DECIMAL(a,b)  ---> a--> length of the number, b---> number of decimal places.Ex: DECIMAL(4,5)--> 22.456

String
--------
1)CHAR(n) ---> fixed length char string. Ex: CHAR(5) ---> "hello", "world". (5)
2)VARCHAR(n) --> var length char string. EX: VARCHAR(5) --> "hello", "world", "Hi" (1-5)
3)TEXT ---> Large string.

Date and Time 
-------------
DATE --> Date as a string (YYYY-MM-DD)
TIME --> Time as string (HH:MM:SS)
DATETIME --> both (YYYY-MM-DD HH:MM:SS)

constraint
------------
>> rules that applied to a tables column.
primary key ---> unique and not null. used to identify each row. 
UNIQUE --> data should be unique,
NOT NULL --> cannot leave that col empty.
AUTO_INCREMENT ---> Automatically increases numeric primary keys
DEFAULT --> adds default value to a col.

FOREIGN KEY -->  Used to relate two tables. this represents primary key of another table.

Operators---> conditions ---> filter the rows
-----------------------------------------------
=  --> True, if both values are equal
<>, != --> True, if both are not equal
< --> a<b True, a is lesser 
> --> a>b True, a is greater 
>=  --> a>=b True, a is greater or equal
<=  --> a<=b True, a is lesser or equal 

BETWEEN ---> Range filtering 
>> where col between num1 and num2;

IN operator ---> Checking against multiple values.
Syntax:
>> where col in (val1, val2, val3........)

LIKE operator --> Pattern matching
%--> mathces any sequence of characters(0-infinite)
_---> mathches exactly one char.

-->'a%'--> 'anand'
-->'%a'
-->'_a%'    -->'banana'

>> where col LIKE pattern;

AND --> cond1 and cond2 -->true--> when both are true.
OR --> cond1 and cond2 -->false--> when both are false.
NOT ---> not cond1 --> invert the value


LIMIT 
------ (limiting the number of result)
LIMIT 10 --> first 10 results will be displayed.

OFFSET (skip the rows)
-------
OFFSET 10 --> skips first 10 results


SORT (ORDER BY)
----
ORDER BY col (ASC or DESC)


Queries:
---------
to create a new Schema(DB) ---> CREATE DATABASE dbname;
to select a DB --> USE dbname;
to create a table ---> CREATE TABLE tbname(
    col1 Datatype constraint,
    col2 Datatype constraint,
    .
    .
    .
    .
);

To insert data in a table ---> INSERT INTO tbname (col detils) VALUES (d1),(d2),(d3).....;
To retrive data from a table ---> SELECT (col details (*--> to retrive every col)) FROM tbname;
To update the existing data --->UPDATE tbname set col1=val1, col2=val2.... (when sql_safe_updates is turned on, you can't update row without filteration. you cannot update more than one row in one go. the condition you are using for filteration should depend on primary.)
To delete a row from a table --> DELETE FROM tbname;


CRUD ---> Create Read Update Delete
-------------------------------------------
C---> INSERT
R---> SELECT
U---> UPDATE
D---> DELETE


WHERE
-----
>> used to filter the rows.
>> query WHERE condition.




Functions in MySQL:
--------------------
>> Predefined operations. that takes input and return output.

Numeric Functions 
-------------------
ROUND() ---> Round off a number to closest integer
CEIL() ---> Round off to the next integer. EX: 10.00001--> 11
FLOOR() ---> Round off to the previous integer. Ex: 10.9999 ---> 10
MOD(num1, num2) ---> finds reminder.

String Functions 
-------------------
CONCAT(str1,str2,.......) ---> to attach the strings. Ex: concat("Livin","Kumar")--> "LivinKumar"
LENGTH(str) ---> find length of a string. Ex: LEN("Hell") --> 4
UPPER()/ LOWER()  --> uppercase, lowercase conversion
REPLACE(str, oldSubStr, newSubStr) ---> replace a particular sub string from a string.

DATE/TIME Functions
-------------------
NOW() --> give us current date and time.
CURDATE() --> give us current date
CURTIME() --> give us current time
DATEDIFF() --> find difference (in days) between two different days.